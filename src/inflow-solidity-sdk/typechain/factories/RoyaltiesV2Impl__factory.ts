/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { RoyaltiesV2Impl, RoyaltiesV2ImplInterface } from '../RoyaltiesV2Impl';

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                components: [
                    {
                        internalType: 'address payable',
                        name: 'account',
                        type: 'address'
                    },
                    {
                        internalType: 'uint96',
                        name: 'value',
                        type: 'uint96'
                    }
                ],
                indexed: false,
                internalType: 'struct LibPart.Part[]',
                name: 'royalties',
                type: 'tuple[]'
            }
        ],
        name: 'RoyaltiesSet',
        type: 'event'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'getRoyalties',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address payable',
                        name: 'account',
                        type: 'address'
                    },
                    {
                        internalType: 'uint96',
                        name: 'value',
                        type: 'uint96'
                    }
                ],
                internalType: 'struct LibPart.Part[]',
                name: '',
                type: 'tuple[]'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'royalties',
        outputs: [
            {
                internalType: 'address payable',
                name: 'account',
                type: 'address'
            },
            {
                internalType: 'uint96',
                name: 'value',
                type: 'uint96'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    }
];

const _bytecode =
    '0x608060405234801561001057600080fd5b50610210806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638924af741461003b578063bb3bafd61461007a575b600080fd5b61004e610049366004610181565b61009a565b604080516001600160a01b0390931683526001600160601b039091166020830152015b60405180910390f35b61008d610088366004610169565b6100e3565b60405161007191906101a2565b600060205281600052604060002081815481106100b657600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561015e57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b03168183015282526001909201910161010f565b505050509050919050565b60006020828403121561017a578081fd5b5035919050565b60008060408385031215610193578081fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b828110156101f657815180516001600160a01b031685528601516001600160601b03168685015292840192908501906001016101bf565b509197965050505050505056fea164736f6c6343000804000a';

export class RoyaltiesV2Impl__factory extends ContractFactory {
    constructor(signer?: Signer) {
        super(_abi, _bytecode, signer);
    }

    deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<RoyaltiesV2Impl> {
        return super.deploy(overrides || {}) as Promise<RoyaltiesV2Impl>;
    }
    getDeployTransaction(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address: string): RoyaltiesV2Impl {
        return super.attach(address) as RoyaltiesV2Impl;
    }
    connect(signer: Signer): RoyaltiesV2Impl__factory {
        return super.connect(signer) as RoyaltiesV2Impl__factory;
    }
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): RoyaltiesV2ImplInterface {
        return new utils.Interface(_abi) as RoyaltiesV2ImplInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): RoyaltiesV2Impl {
        return new Contract(address, _abi, signerOrProvider) as RoyaltiesV2Impl;
    }
}
