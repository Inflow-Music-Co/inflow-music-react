/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200166138038062001661833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600181811c90821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611423806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610ebb565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610faf565b610223565b60405190151581526020016100a9565b6100e86100e3366004610fee565b610275565b6040516100a9919061116f565b610108610103366004610d78565b610309565b005b61011d610118366004610ee4565b6105d0565b6040516100a9919061112e565b610108610138366004610e81565b610732565b6100c561014b366004610d46565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610e1e565b610809565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060028054610284906112ac565b80601f01602080910402602001604051908101604052809291908181526020018280546102b0906112ac565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b815183511461036b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166103915760405162461bcd60e51b81526004016101f4906111ca565b6001600160a01b0385163314806103ad57506103ad853361014b565b6104145760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b3360005b845181101561056257600085828151811061044357634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061046f57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156104bf5760405162461bcd60e51b81526004016101f49061120f565b6104c98282611295565b60008085815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020819055508160008085815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610547919061127d565b925050819055505050508061055b90611314565b9050610418565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516105b2929190611141565b60405180910390a46105c88187878787876109b9565b505050505050565b606081518351146106355760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561065f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610688578160200160208202803683370190505b50905060005b845181101561072a576106ef8582815181106106ba57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106106e257634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b82828151811061070f57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261072381611314565b905061068e565b509392505050565b336001600160a01b038316141561079d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03841661082f5760405162461bcd60e51b81526004016101f4906111ca565b6001600160a01b03851633148061084b575061084b853361014b565b6108a95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b336108c98187876108b988610b24565b6108c288610b24565b5050505050565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561090a5760405162461bcd60e51b81526004016101f49061120f565b6109148482611295565b6000868152602081815260408083206001600160a01b038c8116855292528083209390935588168152908120805486929061095090849061127d565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109b0828888888888610b7d565b50505050505050565b6001600160a01b0384163b156105c85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906109fd908990899088908890889060040161108b565b602060405180830381600087803b158015610a1757600080fd5b505af1925050508015610a47575060408051601f3d908101601f19168201909252610a4491810190610fd2565b60015b610af457610a5361135b565b806308c379a01415610a8d5750610a68611373565b80610a735750610a8f565b8060405162461bcd60e51b81526004016101f4919061116f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b146109b05760405162461bcd60e51b81526004016101f490611182565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610b6c57634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156105c85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610bc190899089908890889088906004016110e9565b602060405180830381600087803b158015610bdb57600080fd5b505af1925050508015610c0b575060408051601f3d908101601f19168201909252610c0891810190610fd2565b60015b610c1757610a5361135b565b6001600160e01b0319811663f23a6e6160e01b146109b05760405162461bcd60e51b81526004016101f490611182565b80356001600160a01b0381168114610c5e57600080fd5b919050565b600082601f830112610c73578081fd5b81356020610c8082611259565b604051610c8d82826112e7565b8381528281019150858301600585901b87018401881015610cac578586fd5b855b85811015610cca57813584529284019290840190600101610cae565b5090979650505050505050565b600082601f830112610ce7578081fd5b813567ffffffffffffffff811115610d0157610d01611345565b604051610d18601f8301601f1916602001826112e7565b818152846020838601011115610d2c578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610d58578182fd5b610d6183610c47565b9150610d6f60208401610c47565b90509250929050565b600080600080600060a08688031215610d8f578081fd5b610d9886610c47565b9450610da660208701610c47565b9350604086013567ffffffffffffffff80821115610dc2578283fd5b610dce89838a01610c63565b94506060880135915080821115610de3578283fd5b610def89838a01610c63565b93506080880135915080821115610e04578283fd5b50610e1188828901610cd7565b9150509295509295909350565b600080600080600060a08688031215610e35578081fd5b610e3e86610c47565b9450610e4c60208701610c47565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e75578182fd5b610e1188828901610cd7565b60008060408385031215610e93578182fd5b610e9c83610c47565b915060208301358015158114610eb0578182fd5b809150509250929050565b60008060408385031215610ecd578182fd5b610ed683610c47565b946020939093013593505050565b60008060408385031215610ef6578182fd5b823567ffffffffffffffff80821115610f0d578384fd5b818501915085601f830112610f20578384fd5b81356020610f2d82611259565b604051610f3a82826112e7565b8381528281019150858301600585901b870184018b1015610f59578889fd5b8896505b84871015610f8257610f6e81610c47565b835260019690960195918301918301610f5d565b5096505086013592505080821115610f98578283fd5b50610fa585828601610c63565b9150509250929050565b600060208284031215610fc0578081fd5b8135610fcb816113fd565b9392505050565b600060208284031215610fe3578081fd5b8151610fcb816113fd565b600060208284031215610fff578081fd5b5035919050565b6000815180845260208085019450808401835b8381101561103557815187529582019590820190600101611019565b509495945050505050565b60008151808452815b8181101561106557602081850181015186830182015201611049565b818111156110765782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a0604082018190526000906110b790830186611006565b82810360608401526110c98186611006565b905082810360808401526110dd8185611040565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061112390830184611040565b979650505050505050565b602081526000610fcb6020830184611006565b6040815260006111546040830185611006565b82810360208401526111668185611006565b95945050505050565b602081526000610fcb6020830184611040565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561127357611273611345565b5060051b60200190565b600082198211156112905761129061132f565b500190565b6000828210156112a7576112a761132f565b500390565b600181811c908216806112c057607f821691505b602082108114156112e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561130d5761130d611345565b6040525050565b60006000198214156113285761132861132f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561137057600481823e5160e01c5b90565b600060443d10156113815790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113b157505050505090565b82850191508151818111156113c95750505050505090565b843d87010160208285010111156113e35750505050505090565b6113f2602082860101876112e7565b509095945050505050565b6001600160e01b03198116811461141357600080fd5b5056fea164736f6c6343000804000a";

export class ERC1155__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
