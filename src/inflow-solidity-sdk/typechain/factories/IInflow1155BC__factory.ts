/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IInflow1155BC, IInflow1155BCInterface } from '../IInflow1155BC';

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'account',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'bool',
                name: 'approved',
                type: 'bool'
            }
        ],
        name: 'ApprovalForAll',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'burner',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'priceReceived',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'nextMintPrice',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'nextBurnPrice',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenSupply',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'reserve',
                type: 'uint256'
            }
        ],
        name: 'Burned',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'creator',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'enum IInflow1155BC.Curve',
                name: 'curve',
                type: 'uint8'
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'social',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'price',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'socialBalance',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'maxSupply',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'string',
                name: 'uri',
                type: 'string'
            }
        ],
        name: 'Created',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'minter',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'pricePaid',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'nextMintPrice',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'nextBurnPrice',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'tokenSupply',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'royaltyPaid',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'reserve',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'royaltyRecipient',
                type: 'address'
            }
        ],
        name: 'Minted',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]'
            },
            {
                indexed: false,
                internalType: 'uint256[]',
                name: 'values',
                type: 'uint256[]'
            }
        ],
        name: 'TransferBatch',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'id',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'value',
                type: 'uint256'
            }
        ],
        name: 'TransferSingle',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'string',
                name: 'value',
                type: 'string'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'id',
                type: 'uint256'
            }
        ],
        name: 'URI',
        type: 'event'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'id',
                type: 'uint256'
            }
        ],
        name: 'balanceOf',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'accounts',
                type: 'address[]'
            },
            {
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]'
            }
        ],
        name: 'balanceOfBatch',
        outputs: [
            {
                internalType: 'uint256[]',
                name: '',
                type: 'uint256[]'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'burn',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'enum IInflow1155BC.Curve',
                        name: 'curve',
                        type: 'uint8'
                    },
                    {
                        internalType: 'address',
                        name: 'social',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'price',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'socialBalance',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'maxSupply',
                        type: 'uint256'
                    },
                    {
                        internalType: 'string',
                        name: 'uri',
                        type: 'string'
                    },
                    {
                        components: [
                            {
                                internalType: 'address payable',
                                name: 'account',
                                type: 'address'
                            },
                            {
                                internalType: 'uint96',
                                name: 'value',
                                type: 'uint96'
                            }
                        ],
                        internalType: 'struct LibPart.Part[]',
                        name: 'royalties',
                        type: 'tuple[]'
                    }
                ],
                internalType: 'struct IInflow1155BC.CreateData',
                name: '',
                type: 'tuple'
            }
        ],
        name: 'create',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'enum IInflow1155BC.Curve',
                name: '',
                type: 'uint8'
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'getBurnPrice',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'getCreatorFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'enum IInflow1155BC.Curve',
                name: '',
                type: 'uint8'
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'getMintPrice',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'pure',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'getToken',
        outputs: [
            {
                components: [
                    {
                        internalType: 'enum IInflow1155BC.Curve',
                        name: 'curve',
                        type: 'uint8'
                    },
                    {
                        internalType: 'address',
                        name: 'creator',
                        type: 'address'
                    },
                    {
                        internalType: 'contract ISocialToken',
                        name: 'social',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'price',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'socialBalance',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'maxSupply',
                        type: 'uint256'
                    },
                    {
                        components: [
                            {
                                internalType: 'uint256',
                                name: '_value',
                                type: 'uint256'
                            }
                        ],
                        internalType: 'struct Counters.Counter',
                        name: 'supply',
                        type: 'tuple'
                    },
                    {
                        internalType: 'string',
                        name: 'uri',
                        type: 'string'
                    }
                ],
                internalType: 'struct IInflow1155BC.Token',
                name: '',
                type: 'tuple'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'operator',
                type: 'address'
            }
        ],
        name: 'isApprovedForAll',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'mint',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256[]',
                name: 'ids',
                type: 'uint256[]'
            },
            {
                internalType: 'uint256[]',
                name: 'amounts',
                type: 'uint256[]'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'safeBatchTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'id',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                internalType: 'bool',
                name: 'approved',
                type: 'bool'
            }
        ],
        name: 'setApprovalForAll',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: '_baseUri',
                type: 'string'
            }
        ],
        name: 'setBaseUri',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bool',
                name: 'enabled',
                type: 'bool'
            }
        ],
        name: 'setContractMintEnabled',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_createPrice',
                type: 'uint256'
            }
        ],
        name: 'setCreatePrice',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceId',
                type: 'bytes4'
            }
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            },
            {
                internalType: 'address',
                name: '',
                type: 'address'
            },
            {
                internalType: 'address',
                name: '',
                type: 'address'
            }
        ],
        name: 'updateRoyaltyAccount',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [],
        name: 'withdraw',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    }
];

export class IInflow1155BC__factory {
    static readonly abi = _abi;
    static createInterface(): IInflow1155BCInterface {
        return new utils.Interface(_abi) as IInflow1155BCInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): IInflow1155BC {
        return new Contract(address, _abi, signerOrProvider) as IInflow1155BC;
    }
}
