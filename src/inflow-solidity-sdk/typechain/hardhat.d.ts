/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IInflow1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInflow1155__factory>;
    getContractFactory(
      name: "IInflow1155BC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInflow1155BC__factory>;
    getContractFactory(
      name: "ISocialToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISocialToken__factory>;
    getContractFactory(
      name: "MockMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMinter__factory>;
    getContractFactory(
      name: "MockUSDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUSDC__factory>;
    getContractFactory(
      name: "USDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDC__factory>;
    getContractFactory(
      name: "AbstractRoyalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractRoyalties__factory>;
    getContractFactory(
      name: "RoyaltiesV1Impl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV1Impl__factory>;
    getContractFactory(
      name: "RoyaltiesV2Impl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesV2Impl__factory>;
    getContractFactory(
      name: "IRoyaltiesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyaltiesProvider__factory>;
    getContractFactory(
      name: "IRoyaltiesV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyaltiesV1__factory>;
    getContractFactory(
      name: "IRoyaltiesV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyaltiesV2__factory>;
    getContractFactory(
      name: "LibPart",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibPart__factory>;
    getContractFactory(
      name: "Inflow1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Inflow1155__factory>;
    getContractFactory(
      name: "Inflow1155BC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Inflow1155BC__factory>;
    getContractFactory(
      name: "Inflow721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Inflow721__factory>;
    getContractFactory(
      name: "SocialToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialToken__factory>;
    getContractFactory(
      name: "SocialTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialTokenFactory__factory>;
    getContractFactory(
      name: "Splitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Splitter__factory>;
    getContractFactory(
      name: "SplitterFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SplitterFactory__factory>;
    getContractFactory(
      name: "Whitelistable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Whitelistable__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
